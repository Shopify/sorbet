ClassDef{
  loc = test/testdata/desugar/andand_type_merge.rb:3:1-23:4
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/andand_type_merge.rb:3:1-23:4
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Send{
      loc = test/testdata/desugar/andand_type_merge.rb:3:1-3:14
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/andand_type_merge.rb:3:1-3:1
        localVariable = <U <self>>
      }
      fun = <U extend>
      block = nullptr
      pos_args = 1
      args = [
        UnresolvedConstantLit{
          loc = test/testdata/desugar/andand_type_merge.rb:3:8-3:14
          cnst = <C <U Sig>>
          scope = UnresolvedConstantLit{
            loc = test/testdata/desugar/andand_type_merge.rb:3:8-3:9
            cnst = <C <U T>>
            scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
          }
        }
      ]
    }

    Assign{
      loc = test/testdata/desugar/andand_type_merge.rb:5:1-7:4
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/andand_type_merge.rb:5:1-5:5
        cnst = <C <U Pair>>
        scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
      }
      rhs = Send{
        loc = test/testdata/desugar/andand_type_merge.rb:5:8-7:4
        flags = {}
        recv = UnresolvedConstantLit{
          loc = test/testdata/desugar/andand_type_merge.rb:5:8-5:9
          cnst = <C <U T>>
          scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
        }
        fun = <U type_alias>
        block = Block {
          loc = test/testdata/desugar/andand_type_merge.rb:5:8-7:4
          args = [
          ]
          body = Send{
            loc = test/testdata/desugar/andand_type_merge.rb:6:3-6:25
            flags = {}
            recv = UnresolvedConstantLit{
              loc = test/testdata/desugar/andand_type_merge.rb:6:3-6:4
              cnst = <C <U T>>
              scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
            }
            fun = <U any>
            block = nullptr
            pos_args = 2
            args = [
              UnresolvedConstantLit{
                loc = test/testdata/desugar/andand_type_merge.rb:6:9-6:16
                cnst = <C <U Integer>>
                scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
              }
              UnresolvedConstantLit{
                loc = test/testdata/desugar/andand_type_merge.rb:6:18-6:24
                cnst = <C <U String>>
                scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
              }
            ]
          }
        }
        pos_args = 0
        args = [
        ]
      }
    }

    Send{
      loc = test/testdata/desugar/andand_type_merge.rb:9:1-9:38
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/andand_type_merge.rb:9:1-9:1
        localVariable = <U <self>>
      }
      fun = <U sig>
      block = Block {
        loc = test/testdata/desugar/andand_type_merge.rb:9:1-9:38
        args = [
        ]
        body = Send{
          loc = test/testdata/desugar/andand_type_merge.rb:9:6-9:37
          flags = {}
          recv = Send{
            loc = test/testdata/desugar/andand_type_merge.rb:9:6-9:21
            flags = {privateOk}
            recv = Local{
              loc = test/testdata/desugar/andand_type_merge.rb:9:6-9:6
              localVariable = <U <self>>
            }
            fun = <U params>
            block = nullptr
            pos_args = 0
            args = [
              Literal{ loc = test/testdata/desugar/andand_type_merge.rb:9:13-9:14, value = :x }
              UnresolvedConstantLit{
                loc = test/testdata/desugar/andand_type_merge.rb:9:16-9:20
                cnst = <C <U Pair>>
                scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
              }
            ]
          }
          fun = <U returns>
          block = nullptr
          pos_args = 1
          args = [
            UnresolvedConstantLit{
              loc = test/testdata/desugar/andand_type_merge.rb:9:30-9:36
              cnst = <C <U String>>
              scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
            }
          ]
        }
      }
      pos_args = 0
      args = [
      ]
    }

    MethodDef{
      loc = test/testdata/desugar/andand_type_merge.rb:10:1-17:4
      flags = {}
      name = <U create><<U <todo method>>>
      args = [UnresolvedIdent{
          loc = test/testdata/desugar/andand_type_merge.rb:10:12-10:13
          kind = Local
          name = <U x>
        }, BlockArg{ loc = test/testdata/desugar/andand_type_merge.rb, expr = UnresolvedIdent{
          loc = test/testdata/desugar/andand_type_merge.rb
          kind = Local
          name = <U <blk>>
        } }]
      rhs = InsSeq{
        loc = test/testdata/desugar/andand_type_merge.rb:11:3-16:6
        stats = [
          Assign{
            loc = test/testdata/desugar/andand_type_merge.rb:11:8-11:9
            lhs = UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:11:8-11:9
              kind = Local
              name = <D <U <assignTemp>> $2>
            }
            rhs = UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:11:8-11:9
              kind = Local
              name = <U x>
            }
          }
        ],
        expr = If{
          loc = test/testdata/desugar/andand_type_merge.rb:12:3-13:6
          cond = Send{
            loc = test/testdata/desugar/andand_type_merge.rb:12:8-12:14
            flags = {}
            recv = UnresolvedConstantLit{
              loc = test/testdata/desugar/andand_type_merge.rb:12:8-12:14
              cnst = <C <U String>>
              scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
            }
            fun = <U ===>
            block = nullptr
            pos_args = 1
            args = [
              UnresolvedIdent{
                loc = test/testdata/desugar/andand_type_merge.rb:11:8-11:9
                kind = Local
                name = <D <U <assignTemp>> $2>
              }
            ]
          }
          thenp = UnresolvedIdent{
            loc = test/testdata/desugar/andand_type_merge.rb:13:5-13:6
            kind = Local
            name = <U x>
          }
          elsep = Send{
            loc = test/testdata/desugar/andand_type_merge.rb:15:5-15:11
            flags = {}
            recv = UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:15:5-15:6
              kind = Local
              name = <U x>
            }
            fun = <U to_s>
            block = nullptr
            pos_args = 0
            args = [
            ]
          }
        }
      }
    }

    Send{
      loc = test/testdata/desugar/andand_type_merge.rb:19:1-19:41
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/andand_type_merge.rb:19:1-19:1
        localVariable = <U <self>>
      }
      fun = <U sig>
      block = Block {
        loc = test/testdata/desugar/andand_type_merge.rb:19:1-19:41
        args = [
        ]
        body = Send{
          loc = test/testdata/desugar/andand_type_merge.rb:19:6-19:40
          flags = {}
          recv = Send{
            loc = test/testdata/desugar/andand_type_merge.rb:19:6-19:35
            flags = {privateOk}
            recv = Local{
              loc = test/testdata/desugar/andand_type_merge.rb:19:6-19:6
              localVariable = <U <self>>
            }
            fun = <U params>
            block = nullptr
            pos_args = 0
            args = [
              Literal{ loc = test/testdata/desugar/andand_type_merge.rb:19:13-19:17, value = :pair }
              Send{
                loc = test/testdata/desugar/andand_type_merge.rb:19:19-19:34
                flags = {}
                recv = UnresolvedConstantLit{
                  loc = test/testdata/desugar/andand_type_merge.rb:19:19-19:20
                  cnst = <C <U T>>
                  scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
                }
                fun = <U nilable>
                block = nullptr
                pos_args = 1
                args = [
                  UnresolvedConstantLit{
                    loc = test/testdata/desugar/andand_type_merge.rb:19:29-19:33
                    cnst = <C <U Pair>>
                    scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
                  }
                ]
              }
            ]
          }
          fun = <U void>
          block = nullptr
          pos_args = 0
          args = [
          ]
        }
      }
      pos_args = 0
      args = [
      ]
    }

    MethodDef{
      loc = test/testdata/desugar/andand_type_merge.rb:20:1-23:4
      flags = {}
      name = <U f><<U <todo method>>>
      args = [UnresolvedIdent{
          loc = test/testdata/desugar/andand_type_merge.rb:20:7-20:11
          kind = Local
          name = <U pair>
        }, BlockArg{ loc = test/testdata/desugar/andand_type_merge.rb, expr = UnresolvedIdent{
          loc = test/testdata/desugar/andand_type_merge.rb
          kind = Local
          name = <U <blk>>
        } }]
      rhs = InsSeq{
        loc = test/testdata/desugar/andand_type_merge.rb:21:3-22:22
        stats = [
          If{
            loc = test/testdata/desugar/andand_type_merge.rb:21:3-21:24
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:21:3-21:7
              kind = Local
              name = <U pair>
            }
            thenp = Assign{
              loc = test/testdata/desugar/andand_type_merge.rb:21:3-21:24
              lhs = UnresolvedIdent{
                loc = test/testdata/desugar/andand_type_merge.rb:21:3-21:7
                kind = Local
                name = <U pair>
              }
              rhs = Send{
                loc = test/testdata/desugar/andand_type_merge.rb:21:12-21:24
                flags = {privateOk}
                recv = Local{
                  loc = test/testdata/desugar/andand_type_merge.rb:21:12-21:12
                  localVariable = <U <self>>
                }
                fun = <U create>
                block = nullptr
                pos_args = 1
                args = [
                  UnresolvedIdent{
                    loc = test/testdata/desugar/andand_type_merge.rb:21:19-21:23
                    kind = Local
                    name = <U pair>
                  }
                ]
              }
            }
            elsep = UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:21:3-21:7
              kind = Local
              name = <U pair>
            }
          }
        ],
        expr = Send{
          loc = test/testdata/desugar/andand_type_merge.rb:22:3-22:22
          flags = {}
          recv = UnresolvedConstantLit{
            loc = test/testdata/desugar/andand_type_merge.rb:22:3-22:4
            cnst = <C <U T>>
            scope = EmptyTree{ loc = test/testdata/desugar/andand_type_merge.rb }
          }
          fun = <U reveal_type>
          block = nullptr
          pos_args = 1
          args = [
            UnresolvedIdent{
              loc = test/testdata/desugar/andand_type_merge.rb:22:17-22:21
              kind = Local
              name = <U pair>
            }
          ]
        }
      }
    }
  ]
}
