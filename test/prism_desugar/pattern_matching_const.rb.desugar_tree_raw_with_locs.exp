ClassDef{
  loc = test/testdata/desugar/pattern_matching_const.rb:3:1-17:4
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/pattern_matching_const.rb:3:1-17:4
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Assign{
      loc = test/testdata/desugar/pattern_matching_const.rb:3:1-3:8
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/pattern_matching_const.rb:3:1-3:2
        cnst = <C <U A>>
        scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
      }
      rhs = Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:3:5-3:8, value = nil }
    }

    Assign{
      loc = test/testdata/desugar/pattern_matching_const.rb:4:1-4:8
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/pattern_matching_const.rb:4:1-4:2
        cnst = <C <U B>>
        scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
      }
      rhs = Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:4:5-4:8, value = nil }
    }

    InsSeq{
      loc = test/testdata/desugar/pattern_matching_const.rb:6:1-17:4
      stats = [
        Assign{
          loc = test/testdata/desugar/pattern_matching_const.rb:6:6-6:9
          lhs = UnresolvedIdent{
            loc = test/testdata/desugar/pattern_matching_const.rb:6:6-6:9
            kind = Local
            name = <D <U <assignTemp>> $2>
          }
          rhs = Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:6:6-6:9, value = nil }
        }
      ],
      expr = If{
        loc = test/testdata/desugar/pattern_matching_const.rb:7:1-7:5
        cond = Send{
          loc = test/testdata/desugar/pattern_matching_const.rb:7:4-7:5
          flags = {rewriterSynthesized}
          recv = Send{
            loc = test/testdata/desugar/pattern_matching_const.rb:7:4-7:5
            flags = {}
            recv = ConstantLit{
              loc = test/testdata/desugar/pattern_matching_const.rb:7:4-7:5
              symbol = (module ::T)
              orig = nullptr
            }
            fun = <U unsafe>
            block = nullptr
            pos_args = 1
            args = [
              ConstantLit{
                loc = test/testdata/desugar/pattern_matching_const.rb:7:4-7:5
                symbol = (module ::Kernel)
                orig = nullptr
              }
            ]
          }
          fun = <U raise>
          block = nullptr
          pos_args = 1
          args = [
            Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:7:4-7:5, value = "Sorbet rewriter pass partially unimplemented" }
          ]
        }
        thenp = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
        elsep = If{
          loc = test/testdata/desugar/pattern_matching_const.rb:8:1-8:9
          cond = Send{
            loc = test/testdata/desugar/pattern_matching_const.rb:8:4-8:9
            flags = {rewriterSynthesized}
            recv = Send{
              loc = test/testdata/desugar/pattern_matching_const.rb:8:4-8:9
              flags = {}
              recv = ConstantLit{
                loc = test/testdata/desugar/pattern_matching_const.rb:8:4-8:9
                symbol = (module ::T)
                orig = nullptr
              }
              fun = <U unsafe>
              block = nullptr
              pos_args = 1
              args = [
                ConstantLit{
                  loc = test/testdata/desugar/pattern_matching_const.rb:8:4-8:9
                  symbol = (module ::Kernel)
                  orig = nullptr
                }
              ]
            }
            fun = <U raise>
            block = nullptr
            pos_args = 1
            args = [
              Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:8:4-8:9, value = "Sorbet rewriter pass partially unimplemented" }
            ]
          }
          thenp = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
          elsep = If{
            loc = test/testdata/desugar/pattern_matching_const.rb:9:1-9:8
            cond = Send{
              loc = test/testdata/desugar/pattern_matching_const.rb:9:4-9:8
              flags = {rewriterSynthesized}
              recv = Send{
                loc = test/testdata/desugar/pattern_matching_const.rb:9:4-9:8
                flags = {}
                recv = ConstantLit{
                  loc = test/testdata/desugar/pattern_matching_const.rb:9:4-9:8
                  symbol = (module ::T)
                  orig = nullptr
                }
                fun = <U unsafe>
                block = nullptr
                pos_args = 1
                args = [
                  ConstantLit{
                    loc = test/testdata/desugar/pattern_matching_const.rb:9:4-9:8
                    symbol = (module ::Kernel)
                    orig = nullptr
                  }
                ]
              }
              fun = <U raise>
              block = nullptr
              pos_args = 1
              args = [
                Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:9:4-9:8, value = "Sorbet rewriter pass partially unimplemented" }
              ]
            }
            thenp = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
            elsep = If{
              loc = test/testdata/desugar/pattern_matching_const.rb:10:1-11:19
              cond = Send{
                loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10
                flags = {rewriterSynthesized}
                recv = Send{
                  loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10
                  flags = {}
                  recv = ConstantLit{
                    loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10
                    symbol = (module ::T)
                    orig = nullptr
                  }
                  fun = <U unsafe>
                  block = nullptr
                  pos_args = 1
                  args = [
                    ConstantLit{
                      loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10
                      symbol = (module ::Kernel)
                      orig = nullptr
                    }
                  ]
                }
                fun = <U raise>
                block = nullptr
                pos_args = 1
                args = [
                  Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10, value = "Sorbet rewriter pass partially unimplemented" }
                ]
              }
              thenp = InsSeq{
                loc = test/testdata/desugar/pattern_matching_const.rb:10:4-10:10
                stats = [
                  Assign{
                    loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                    lhs = UnresolvedIdent{
                      loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                      kind = Local
                      name = <U x>
                    }
                    rhs = Send{
                      loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                      flags = {rewriterSynthesized}
                      recv = Send{
                        loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                        flags = {}
                        recv = ConstantLit{
                          loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                          symbol = (module ::T)
                          orig = nullptr
                        }
                        fun = <U unsafe>
                        block = nullptr
                        pos_args = 1
                        args = [
                          ConstantLit{
                            loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10
                            symbol = (module ::Kernel)
                            orig = nullptr
                          }
                        ]
                      }
                      fun = <U raise>
                      block = nullptr
                      pos_args = 1
                      args = [
                        Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:10:9-10:10, value = "Sorbet rewriter pass partially unimplemented" }
                      ]
                    }
                  }
                ],
                expr = Send{
                  loc = test/testdata/desugar/pattern_matching_const.rb:11:3-11:19
                  flags = {}
                  recv = UnresolvedConstantLit{
                    loc = test/testdata/desugar/pattern_matching_const.rb:11:3-11:4
                    cnst = <C <U T>>
                    scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
                  }
                  fun = <U reveal_type>
                  block = nullptr
                  pos_args = 1
                  args = [
                    UnresolvedIdent{
                      loc = test/testdata/desugar/pattern_matching_const.rb:11:17-11:18
                      kind = Local
                      name = <U x>
                    }
                  ]
                }
              }
              elsep = If{
                loc = test/testdata/desugar/pattern_matching_const.rb:12:1-13:19
                cond = Send{
                  loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14
                  flags = {rewriterSynthesized}
                  recv = Send{
                    loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14
                    flags = {}
                    recv = ConstantLit{
                      loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14
                      symbol = (module ::T)
                      orig = nullptr
                    }
                    fun = <U unsafe>
                    block = nullptr
                    pos_args = 1
                    args = [
                      ConstantLit{
                        loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14
                        symbol = (module ::Kernel)
                        orig = nullptr
                      }
                    ]
                  }
                  fun = <U raise>
                  block = nullptr
                  pos_args = 1
                  args = [
                    Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14, value = "Sorbet rewriter pass partially unimplemented" }
                  ]
                }
                thenp = InsSeq{
                  loc = test/testdata/desugar/pattern_matching_const.rb:12:4-12:14
                  stats = [
                    Assign{
                      loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                      lhs = UnresolvedIdent{
                        loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                        kind = Local
                        name = <U x>
                      }
                      rhs = Send{
                        loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                        flags = {rewriterSynthesized}
                        recv = Send{
                          loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                          flags = {}
                          recv = ConstantLit{
                            loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                            symbol = (module ::T)
                            orig = nullptr
                          }
                          fun = <U unsafe>
                          block = nullptr
                          pos_args = 1
                          args = [
                            ConstantLit{
                              loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14
                              symbol = (module ::Kernel)
                              orig = nullptr
                            }
                          ]
                        }
                        fun = <U raise>
                        block = nullptr
                        pos_args = 1
                        args = [
                          Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:12:13-12:14, value = "Sorbet rewriter pass partially unimplemented" }
                        ]
                      }
                    }
                  ],
                  expr = Send{
                    loc = test/testdata/desugar/pattern_matching_const.rb:13:3-13:19
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/pattern_matching_const.rb:13:3-13:4
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
                    }
                    fun = <U reveal_type>
                    block = nullptr
                    pos_args = 1
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/pattern_matching_const.rb:13:17-13:18
                        kind = Local
                        name = <U x>
                      }
                    ]
                  }
                }
                elsep = If{
                  loc = test/testdata/desugar/pattern_matching_const.rb:14:1-16:19
                  cond = Send{
                    loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18
                    flags = {rewriterSynthesized}
                    recv = Send{
                      loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18
                      flags = {}
                      recv = ConstantLit{
                        loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18
                        symbol = (module ::T)
                        orig = nullptr
                      }
                      fun = <U unsafe>
                      block = nullptr
                      pos_args = 1
                      args = [
                        ConstantLit{
                          loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18
                          symbol = (module ::Kernel)
                          orig = nullptr
                        }
                      ]
                    }
                    fun = <U raise>
                    block = nullptr
                    pos_args = 1
                    args = [
                      Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18, value = "Sorbet rewriter pass partially unimplemented" }
                    ]
                  }
                  thenp = InsSeq{
                    loc = test/testdata/desugar/pattern_matching_const.rb:14:4-14:18
                    stats = [
                      Assign{
                        loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                        lhs = UnresolvedIdent{
                          loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                          kind = Local
                          name = <U x>
                        }
                        rhs = Send{
                          loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                          flags = {rewriterSynthesized}
                          recv = Send{
                            loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                            flags = {}
                            recv = ConstantLit{
                              loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                              symbol = (module ::T)
                              orig = nullptr
                            }
                            fun = <U unsafe>
                            block = nullptr
                            pos_args = 1
                            args = [
                              ConstantLit{
                                loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10
                                symbol = (module ::Kernel)
                                orig = nullptr
                              }
                            ]
                          }
                          fun = <U raise>
                          block = nullptr
                          pos_args = 1
                          args = [
                            Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:14:9-14:10, value = "Sorbet rewriter pass partially unimplemented" }
                          ]
                        }
                      }
                      Assign{
                        loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                        lhs = UnresolvedIdent{
                          loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                          kind = Local
                          name = <U y>
                        }
                        rhs = Send{
                          loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                          flags = {rewriterSynthesized}
                          recv = Send{
                            loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                            flags = {}
                            recv = ConstantLit{
                              loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                              symbol = (module ::T)
                              orig = nullptr
                            }
                            fun = <U unsafe>
                            block = nullptr
                            pos_args = 1
                            args = [
                              ConstantLit{
                                loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18
                                symbol = (module ::Kernel)
                                orig = nullptr
                              }
                            ]
                          }
                          fun = <U raise>
                          block = nullptr
                          pos_args = 1
                          args = [
                            Literal{ loc = test/testdata/desugar/pattern_matching_const.rb:14:17-14:18, value = "Sorbet rewriter pass partially unimplemented" }
                          ]
                        }
                      }
                    ],
                    expr = InsSeq{
                      loc = test/testdata/desugar/pattern_matching_const.rb:15:3-16:19
                      stats = [
                        Send{
                          loc = test/testdata/desugar/pattern_matching_const.rb:15:3-15:19
                          flags = {}
                          recv = UnresolvedConstantLit{
                            loc = test/testdata/desugar/pattern_matching_const.rb:15:3-15:4
                            cnst = <C <U T>>
                            scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
                          }
                          fun = <U reveal_type>
                          block = nullptr
                          pos_args = 1
                          args = [
                            UnresolvedIdent{
                              loc = test/testdata/desugar/pattern_matching_const.rb:15:17-15:18
                              kind = Local
                              name = <U x>
                            }
                          ]
                        }
                      ],
                      expr = Send{
                        loc = test/testdata/desugar/pattern_matching_const.rb:16:3-16:19
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/pattern_matching_const.rb:16:3-16:4
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
                        }
                        fun = <U reveal_type>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedIdent{
                            loc = test/testdata/desugar/pattern_matching_const.rb:16:17-16:18
                            kind = Local
                            name = <U y>
                          }
                        ]
                      }
                    }
                  }
                  elsep = EmptyTree{ loc = test/testdata/desugar/pattern_matching_const.rb }
                }
              }
            }
          }
        }
      }
    }
  ]
}
