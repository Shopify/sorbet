ClassDef{
  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:4:1-66:4
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:4:1-66:4
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    ClassDef{
      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:4:1-66:4
      kind = module
      name = UnresolvedConstantLit{
        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:4:8-4:14
        cnst = <C <U Config>>
        scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
      }
      symbol = <C <U <todo sym>>>
      ancestors = []
      rhs = [
        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:5:3-5:16
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:5:3-5:3
            localVariable = <U <self>>
          }
          fun = <U extend>
          block = nullptr
          pos_args = 1
          args = [
            UnresolvedConstantLit{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:5:10-5:16
              cnst = <C <U Sig>>
              scope = UnresolvedConstantLit{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:5:10-5:11
                cnst = <C <U T>>
                scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
              }
            }
          ]
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:3-7:28
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:3-7:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:3-7:28
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:8-7:27
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:8-7:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:16-7:26
                  cnst = <C <U Boolean>>
                  scope = UnresolvedConstantLit{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:7:16-7:17
                    cnst = <C <U T>>
                    scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                  }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:8:3-8:51
          flags = {self}
          name = <U expensively_compute_boolean><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:8:41-8:46, value = false }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:3-10:50
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:3-10:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:3-10:50
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:8-10:49
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:8-10:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                Send{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:16-10:48
                  flags = {}
                  recv = UnresolvedConstantLit{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:16-10:24
                    cnst = <C <U Array>>
                    scope = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:16-10:17
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                  }
                  fun = <U []>
                  block = nullptr
                  pos_args = 1
                  args = [
                    Send{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:25-10:47
                      flags = {}
                      recv = UnresolvedConstantLit{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:25-10:26
                        cnst = <C <U T>>
                        scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                      }
                      fun = <U any>
                      block = nullptr
                      pos_args = 2
                      args = [
                        UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:31-10:38
                          cnst = <C <U Integer>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:10:40-10:46
                          cnst = <C <U String>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:11:3-11:57
          flags = {self}
          name = <U two_tuple_looks_like_array><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = Array{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:11:40-11:52
            elems = [
              Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:11:41-11:44, value = 123 }
              Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:11:46-11:51, value = "foo" }
            ]
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:3-13:34
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:3-13:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:3-13:34
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:8-13:33
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:8-13:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                Send{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:16-13:32
                  flags = {}
                  recv = UnresolvedConstantLit{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:16-13:24
                    cnst = <C <U Array>>
                    scope = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:16-13:17
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                  }
                  fun = <U []>
                  block = nullptr
                  pos_args = 1
                  args = [
                    UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:13:25-13:31
                      cnst = <C <U String>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                  ]
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:14:3-18:6
          flags = {self}
          name = <U supported_methods><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = InsSeq{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-17:23
            stats = [
              If{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                cond = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:23
                  kind = Instance
                  name = <U @supported_methods>
                }
                thenp = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:23
                  kind = Instance
                  name = <U @supported_methods>
                }
                elsep = InsSeq{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                  stats = [
                    Assign{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                      lhs = UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:23
                        kind = Instance
                        name = <U @supported_methods>
                      }
                      rhs = Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:28-15:103
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:28-15:29
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U let>
                        block = nullptr
                        pos_args = 2
                        args = [
                          UnresolvedIdent{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:23
                            kind = Instance
                            name = <U @supported_methods>
                          }
                          Send{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:75-15:102
                            flags = {}
                            recv = UnresolvedConstantLit{
                              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:75-15:76
                              cnst = <C <U T>>
                              scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                            }
                            fun = <U nilable>
                            block = nullptr
                            pos_args = 1
                            args = [
                              Send{
                                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:85-15:101
                                flags = {}
                                recv = UnresolvedConstantLit{
                                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:85-15:93
                                  cnst = <C <U Array>>
                                  scope = UnresolvedConstantLit{
                                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:85-15:86
                                    cnst = <C <U T>>
                                    scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                                  }
                                }
                                fun = <U []>
                                block = nullptr
                                pos_args = 1
                                args = [
                                  UnresolvedConstantLit{
                                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:94-15:100
                                    cnst = <C <U String>>
                                    scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                    Assign{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                      lhs = UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                        kind = Local
                        name = <D <U <statTemp>> $2>
                      }
                      rhs = Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:34-15:73
                        flags = {}
                        recv = Send{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:34-15:66
                          flags = {}
                          recv = Array{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:34-15:61
                            elems = [
                              Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:35-15:41, value = "fast" }
                              Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:43-15:49, value = "slow" }
                              Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:51-15:60, value = "special" }
                            ]
                          }
                          fun = <U uniq>
                          block = nullptr
                          pos_args = 0
                          args = [
                          ]
                        }
                        fun = <U freeze>
                        block = nullptr
                        pos_args = 0
                        args = [
                        ]
                      }
                    }
                  ],
                  expr = Assign{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                    lhs = UnresolvedIdent{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:23
                      kind = Instance
                      name = <U @supported_methods>
                    }
                    rhs = UnresolvedIdent{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:15:5-15:103
                      kind = Local
                      name = <D <U <statTemp>> $2>
                    }
                  }
                }
              }
              Send{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:16:5-16:38
                flags = {}
                recv = UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:16:5-16:6
                  cnst = <C <U T>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
                fun = <U reveal_type>
                block = nullptr
                pos_args = 1
                args = [
                  UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:16:19-16:37
                    kind = Instance
                    name = <U @supported_methods>
                  }
                ]
              }
            ],
            expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:17:5-17:23
              kind = Instance
              name = <U @supported_methods>
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:3-20:24
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:3-20:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:3-20:24
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:8-20:23
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:8-20:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:20:16-20:22
                  cnst = <C <U String>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:21:3-23:6
          flags = {self}
          name = <U initialized_to_nilable><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = If{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:28
              kind = Instance
              name = <U @initialized_to_nilable>
            }
            thenp = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:28
              kind = Instance
              name = <U @initialized_to_nilable>
            }
            elsep = InsSeq{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
              stats = [
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:28
                    kind = Instance
                    name = <U @initialized_to_nilable>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:33-22:62
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:33-22:34
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U let>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:28
                        kind = Instance
                        name = <U @initialized_to_nilable>
                      }
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:44-22:61
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:44-22:45
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U nilable>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedConstantLit{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:54-22:60
                            cnst = <C <U String>>
                            scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                          }
                        ]
                      }
                    ]
                  }
                }
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
                    kind = Local
                    name = <D <U <statTemp>> $2>
                  }
                  rhs = Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:39-22:42, value = nil }
                }
              ],
              expr = Assign{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
                lhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:28
                  kind = Instance
                  name = <U @initialized_to_nilable>
                }
                rhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:22:5-22:62
                  kind = Local
                  name = <D <U <statTemp>> $2>
                }
              }
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:3-25:28
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:3-25:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:3-25:28
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:8-25:27
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:8-25:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:16-25:26
                  cnst = <C <U Boolean>>
                  scope = UnresolvedConstantLit{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:25:16-25:17
                    cnst = <C <U T>>
                    scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                  }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:26:3-36:6
          flags = {self}
          name = <U lazy_boolean><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = If{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:18
              kind = Instance
              name = <U @lazy_boolean>
            }
            thenp = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:18
              kind = Instance
              name = <U @lazy_boolean>
            }
            elsep = InsSeq{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
              stats = [
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:18
                    kind = Instance
                    name = <U @lazy_boolean>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:23-35:80
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:23-35:24
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U let>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:18
                        kind = Instance
                        name = <U @lazy_boolean>
                      }
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:58-35:79
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:58-35:59
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U nilable>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedConstantLit{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:68-35:78
                            cnst = <C <U Boolean>>
                            scope = UnresolvedConstantLit{
                              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:68-35:69
                              cnst = <C <U T>>
                              scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
                    kind = Local
                    name = <D <U <statTemp>> $2>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:29-35:56
                    flags = {privateOk}
                    recv = Local{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:29-35:29
                      localVariable = <U <self>>
                    }
                    fun = <U expensively_compute_boolean>
                    block = nullptr
                    pos_args = 0
                    args = [
                    ]
                  }
                }
              ],
              expr = Assign{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
                lhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:18
                  kind = Instance
                  name = <U @lazy_boolean>
                }
                rhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:35:5-35:80
                  kind = Local
                  name = <D <U <statTemp>> $2>
                }
              }
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:3-38:25
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:3-38:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:3-38:25
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:8-38:24
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:8-38:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:38:16-38:23
                  cnst = <C <U Integer>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:39:3-43:6
          flags = {self}
          name = <U suggest_t_let><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = If{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:19
              kind = Instance
              name = <U @suggest_t_let>
            }
            thenp = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:19
              kind = Instance
              name = <U @suggest_t_let>
            }
            elsep = InsSeq{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
              stats = [
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:19
                    kind = Instance
                    name = <U @suggest_t_let>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:24-40:52
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:24-40:25
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U let>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:19
                        kind = Instance
                        name = <U @suggest_t_let>
                      }
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:34-40:51
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:34-40:35
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U nilable>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedConstantLit{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:44-40:50
                            cnst = <C <U String>>
                            scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                          }
                        ]
                      }
                    ]
                  }
                }
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
                    kind = Local
                    name = <D <U <statTemp>> $2>
                  }
                  rhs = Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:30-40:32, value = "" }
                }
              ],
              expr = Assign{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
                lhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:19
                  kind = Instance
                  name = <U @suggest_t_let>
                }
                rhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:40:5-40:52
                  kind = Local
                  name = <D <U <statTemp>> $2>
                }
              }
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:3-45:25
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:3-45:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:3-45:25
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:8-45:24
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:8-45:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:45:16-45:23
                  cnst = <C <U Integer>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:46:3-48:6
          flags = {self}
          name = <U needs_cast><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = If{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:16
              kind = Instance
              name = <U @needs_cast>
            }
            thenp = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:16
              kind = Instance
              name = <U @needs_cast>
            }
            elsep = InsSeq{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
              stats = [
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:16
                    kind = Instance
                    name = <U @needs_cast>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:21-47:80
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:21-47:22
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U let>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:16
                        kind = Instance
                        name = <U @needs_cast>
                      }
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:61-47:79
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:61-47:62
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U nilable>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedConstantLit{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:71-47:78
                            cnst = <C <U Integer>>
                            scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                          }
                        ]
                      }
                    ]
                  }
                }
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
                    kind = Local
                    name = <D <U <statTemp>> $2>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:27-47:59
                    flags = {}
                    recv = Send{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:27-47:53
                      flags = {privateOk}
                      recv = Local{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:27-47:27
                        localVariable = <U <self>>
                      }
                      fun = <U two_tuple_looks_like_array>
                      block = nullptr
                      pos_args = 0
                      args = [
                      ]
                    }
                    fun = <U first>
                    block = nullptr
                    pos_args = 0
                    args = [
                    ]
                  }
                }
              ],
              expr = Assign{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
                lhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:16
                  kind = Instance
                  name = <U @needs_cast>
                }
                rhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:47:5-47:80
                  kind = Local
                  name = <D <U <statTemp>> $2>
                }
              }
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:3-50:25
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:3-50:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:3-50:25
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:8-50:24
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:8-50:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:50:16-50:23
                  cnst = <C <U Integer>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:51:3-53:6
          flags = {self}
          name = <U allows_cast><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = If{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
            cond = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:17
              kind = Instance
              name = <U @allows_cast>
            }
            thenp = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:17
              kind = Instance
              name = <U @allows_cast>
            }
            elsep = InsSeq{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
              stats = [
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:17
                    kind = Instance
                    name = <U @allows_cast>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:22-52:98
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:22-52:23
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U let>
                    block = nullptr
                    pos_args = 2
                    args = [
                      UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:17
                        kind = Instance
                        name = <U @allows_cast>
                      }
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:79-52:97
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:79-52:80
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U nilable>
                        block = nullptr
                        pos_args = 1
                        args = [
                          UnresolvedConstantLit{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:89-52:96
                            cnst = <C <U Integer>>
                            scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                          }
                        ]
                      }
                    ]
                  }
                }
                Assign{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
                  lhs = UnresolvedIdent{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
                    kind = Local
                    name = <D <U <statTemp>> $2>
                  }
                  rhs = Send{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:28-52:77
                    flags = {}
                    recv = UnresolvedConstantLit{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:28-52:29
                      cnst = <C <U T>>
                      scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                    }
                    fun = <U cast>
                    block = nullptr
                    pos_args = 2
                    args = [
                      Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:35-52:67
                        flags = {}
                        recv = Send{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:35-52:61
                          flags = {privateOk}
                          recv = Local{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:35-52:35
                            localVariable = <U <self>>
                          }
                          fun = <U two_tuple_looks_like_array>
                          block = nullptr
                          pos_args = 0
                          args = [
                          ]
                        }
                        fun = <U first>
                        block = nullptr
                        pos_args = 0
                        args = [
                        ]
                      }
                      UnresolvedConstantLit{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:69-52:76
                        cnst = <C <U Integer>>
                        scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                      }
                    ]
                  }
                }
              ],
              expr = Assign{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
                lhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:17
                  kind = Instance
                  name = <U @allows_cast>
                }
                rhs = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:52:5-52:98
                  kind = Local
                  name = <D <U <statTemp>> $2>
                }
              }
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:3-55:25
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:3-55:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:3-55:25
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:8-55:24
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:8-55:8
                localVariable = <U <self>>
              }
              fun = <U returns>
              block = nullptr
              pos_args = 1
              args = [
                UnresolvedConstantLit{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:55:16-55:23
                  cnst = <C <U Integer>>
                  scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                }
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:56:3-59:6
          flags = {self}
          name = <U accidentally_untyped><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = InsSeq{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-58:26
            stats = [
              If{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                cond = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:26
                  kind = Instance
                  name = <U @accidentally_untyped>
                }
                thenp = UnresolvedIdent{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:26
                  kind = Instance
                  name = <U @accidentally_untyped>
                }
                elsep = InsSeq{
                  loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                  stats = [
                    Assign{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                      lhs = UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:26
                        kind = Instance
                        name = <U @accidentally_untyped>
                      }
                      rhs = Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:31-57:70
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:31-57:32
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U let>
                        block = nullptr
                        pos_args = 2
                        args = [
                          UnresolvedIdent{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:26
                            kind = Instance
                            name = <U @accidentally_untyped>
                          }
                          Send{
                            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:52-57:69
                            flags = {}
                            recv = UnresolvedConstantLit{
                              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:52-57:53
                              cnst = <C <U T>>
                              scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                            }
                            fun = <U nilable>
                            block = nullptr
                            pos_args = 1
                            args = [
                              UnresolvedConstantLit{
                                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:62-57:68
                                cnst = <C <U String>>
                                scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                              }
                            ]
                          }
                        ]
                      }
                    }
                    Assign{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                      lhs = UnresolvedIdent{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                        kind = Local
                        name = <D <U <statTemp>> $2>
                      }
                      rhs = Send{
                        loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:37-57:50
                        flags = {}
                        recv = UnresolvedConstantLit{
                          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:37-57:38
                          cnst = <C <U T>>
                          scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
                        }
                        fun = <U unsafe>
                        block = nullptr
                        pos_args = 1
                        args = [
                          Literal{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:46-57:49, value = nil }
                        ]
                      }
                    }
                  ],
                  expr = Assign{
                    loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                    lhs = UnresolvedIdent{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:26
                      kind = Instance
                      name = <U @accidentally_untyped>
                    }
                    rhs = UnresolvedIdent{
                      loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:57:5-57:70
                      kind = Local
                      name = <D <U <statTemp>> $2>
                    }
                  }
                }
              }
            ],
            expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:58:5-58:26
              kind = Instance
              name = <U @accidentally_untyped>
            }
          }
        }

        Send{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:61:3-61:13
          flags = {privateOk}
          recv = Local{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:61:3-61:3
            localVariable = <U <self>>
          }
          fun = <U sig>
          block = Block {
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:61:3-61:13
            args = [
            ]
            body = Send{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:61:8-61:12
              flags = {privateOk}
              recv = Local{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:61:8-61:8
                localVariable = <U <self>>
              }
              fun = <U void>
              block = nullptr
              pos_args = 0
              args = [
              ]
            }
          }
          pos_args = 0
          args = [
          ]
        }

        MethodDef{
          loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:62:3-65:6
          flags = {self}
          name = <U main><<U <todo method>>>
          args = [BlockArg{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp, expr = UnresolvedIdent{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp
              kind = Local
              name = <U <blk>>
            } }]
          rhs = Send{
            loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:64:5-64:41
            flags = {}
            recv = UnresolvedConstantLit{
              loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:64:5-64:6
              cnst = <C <U T>>
              scope = EmptyTree{ loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp }
            }
            fun = <U reveal_type>
            block = nullptr
            pos_args = 1
            args = [
              UnresolvedIdent{
                loc = test/testdata/desugar/oror_ivar.rb.autocorrects.exp:64:19-64:40
                kind = Instance
                name = <U @accidentally_untyped>
              }
            ]
          }
        }
      ]
    }
  ]
}
