ClassDef{
  loc = test/testdata/desugar/constant_reassignment.rb:3:1-10:7
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/constant_reassignment.rb:3:1-10:7
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Assign{
      loc = test/testdata/desugar/constant_reassignment.rb:3:1-3:6
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/constant_reassignment.rb:3:1-3:2
        cnst = <C <U A>>
        scope = EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }
      }
      rhs = Literal{ loc = test/testdata/desugar/constant_reassignment.rb:3:5-3:6, value = 1 }
    }

    EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }

    Assign{
      loc = test/testdata/desugar/constant_reassignment.rb:6:1-6:6
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/constant_reassignment.rb:6:1-6:2
        cnst = <C <U B>>
        scope = EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }
      }
      rhs = Literal{ loc = test/testdata/desugar/constant_reassignment.rb:6:5-6:6, value = 1 }
    }

    EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }

    Assign{
      loc = test/testdata/desugar/constant_reassignment.rb:9:1-9:6
      lhs = UnresolvedConstantLit{
        loc = test/testdata/desugar/constant_reassignment.rb:9:1-9:2
        cnst = <C <U C>>
        scope = EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }
      }
      rhs = Literal{ loc = test/testdata/desugar/constant_reassignment.rb:9:5-9:6, value = 1 }
    }

    EmptyTree{ loc = test/testdata/desugar/constant_reassignment.rb }
  ]
}
