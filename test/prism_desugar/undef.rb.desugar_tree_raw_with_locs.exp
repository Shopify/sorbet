ClassDef{
  loc = test/testdata/desugar/undef.rb:2:1-19:18
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/undef.rb }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/undef.rb:2:1-19:18
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Send{
      loc = test/testdata/desugar/undef.rb:2:1-2:14
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/undef.rb:2:1-2:1
        localVariable = <U <self>>
      }
      fun = <U extend>
      block = nullptr
      pos_args = 1
      args = [
        UnresolvedConstantLit{
          loc = test/testdata/desugar/undef.rb:2:8-2:14
          cnst = <C <U Sig>>
          scope = UnresolvedConstantLit{
            loc = test/testdata/desugar/undef.rb:2:8-2:9
            cnst = <C <U T>>
            scope = EmptyTree{ loc = test/testdata/desugar/undef.rb }
          }
        }
      ]
    }

    Send{
      loc = test/testdata/desugar/undef.rb:3:1-8:4
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/undef.rb:3:1-3:1
        localVariable = <U <self>>
      }
      fun = <U sig>
      block = Block {
        loc = test/testdata/desugar/undef.rb:3:1-8:4
        args = [
        ]
        body = Send{
          loc = test/testdata/desugar/undef.rb:4:3-7:8
          flags = {}
          recv = Send{
            loc = test/testdata/desugar/undef.rb:4:3-6:4
            flags = {privateOk}
            recv = Local{
              loc = test/testdata/desugar/undef.rb:4:3-4:3
              localVariable = <U <self>>
            }
            fun = <U params>
            block = nullptr
            pos_args = 0
            args = [
              Literal{ loc = test/testdata/desugar/undef.rb:5:7-5:10, value = :arg }
              UnresolvedConstantLit{
                loc = test/testdata/desugar/undef.rb:5:12-5:23
                cnst = <C <U BasicObject>>
                scope = EmptyTree{ loc = test/testdata/desugar/undef.rb }
              }
            ]
          }
          fun = <U void>
          block = nullptr
          pos_args = 0
          args = [
          ]
        }
      }
      pos_args = 0
      args = [
      ]
    }

    MethodDef{
      loc = test/testdata/desugar/undef.rb:9:1-9:21
      flags = {}
      name = <U undef><<U <todo method>>>
      args = [RestArg{ loc = test/testdata/desugar/undef.rb:9:11-9:15, expr = UnresolvedIdent{
          loc = test/testdata/desugar/undef.rb:9:12-9:15
          kind = Local
          name = <U arg>
        } }, BlockArg{ loc = test/testdata/desugar/undef.rb, expr = UnresolvedIdent{
          loc = test/testdata/desugar/undef.rb
          kind = Local
          name = <U <blk>>
        } }]
      rhs = EmptyTree{ loc = test/testdata/desugar/undef.rb }
    }

    MethodDef{
      loc = test/testdata/desugar/undef.rb:11:1-12:4
      flags = {}
      name = <U foo><<U <todo method>>>
      args = [BlockArg{ loc = test/testdata/desugar/undef.rb, expr = UnresolvedIdent{
          loc = test/testdata/desugar/undef.rb
          kind = Local
          name = <U <blk>>
        } }]
      rhs = EmptyTree{ loc = test/testdata/desugar/undef.rb }
    }

    Send{
      loc = test/testdata/desugar/undef.rb:13:1-13:10
      flags = {privateOk}
      recv = ConstantLit{
        loc = test/testdata/desugar/undef.rb:13:1-13:10
        symbol = (module ::Kernel)
        orig = nullptr
      }
      fun = <U undef>
      block = nullptr
      pos_args = 1
      args = [
        Literal{ loc = test/testdata/desugar/undef.rb:13:7-13:10, value = :foo }
      ]
    }

    MethodDef{
      loc = test/testdata/desugar/undef.rb:15:1-16:4
      flags = {}
      name = <U bar><<U <todo method>>>
      args = [BlockArg{ loc = test/testdata/desugar/undef.rb, expr = UnresolvedIdent{
          loc = test/testdata/desugar/undef.rb
          kind = Local
          name = <U <blk>>
        } }]
      rhs = EmptyTree{ loc = test/testdata/desugar/undef.rb }
    }

    Send{
      loc = test/testdata/desugar/undef.rb:17:1-17:11
      flags = {privateOk}
      recv = ConstantLit{
        loc = test/testdata/desugar/undef.rb:17:1-17:11
        symbol = (module ::Kernel)
        orig = nullptr
      }
      fun = <U undef>
      block = nullptr
      pos_args = 1
      args = [
        Literal{ loc = test/testdata/desugar/undef.rb:17:7-17:11, value = :bar }
      ]
    }

    Send{
      loc = test/testdata/desugar/undef.rb:19:1-19:18
      flags = {privateOk}
      recv = ConstantLit{
        loc = test/testdata/desugar/undef.rb:19:1-19:18
        symbol = (module ::Kernel)
        orig = nullptr
      }
      fun = <U undef>
      block = nullptr
      pos_args = 1
      args = [
        Literal{ loc = test/testdata/desugar/undef.rb:19:7-19:18, value = :bad_method }
      ]
    }
  ]
}
