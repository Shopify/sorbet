ClassDef{
  loc = test/testdata/desugar/fuzz_block_pass.rb:2:1-7:9
  kind = class
  name = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb }
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      loc = test/testdata/desugar/fuzz_block_pass.rb:2:1-7:9
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    Next{ loc = test/testdata/desugar/fuzz_block_pass.rb:2:1-2:5, expr = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb } }

    UnresolvedConstantLit{
      loc = test/testdata/desugar/fuzz_block_pass.rb:2:5-2:5
      cnst = <C <U <ErrorNode>>>
      scope = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb }
    }

    Send{
      loc = test/testdata/desugar/fuzz_block_pass.rb:2:7-2:8
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/fuzz_block_pass.rb:2:7-2:7
        localVariable = <U <self>>
      }
      fun = <U a>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Next{ loc = test/testdata/desugar/fuzz_block_pass.rb:3:1-3:7, expr = Send{
        loc = test/testdata/desugar/fuzz_block_pass.rb:3:6-3:7
        flags = {privateOk}
        recv = Local{
          loc = test/testdata/desugar/fuzz_block_pass.rb:3:6-3:6
          localVariable = <U <self>>
        }
        fun = <U a>
        block = nullptr
        pos_args = 0
        args = [
        ]
      } }

    Break{ loc = test/testdata/desugar/fuzz_block_pass.rb:4:1-4:6, expr = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb } }

    UnresolvedConstantLit{
      loc = test/testdata/desugar/fuzz_block_pass.rb:4:6-4:6
      cnst = <C <U <ErrorNode>>>
      scope = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb }
    }

    Send{
      loc = test/testdata/desugar/fuzz_block_pass.rb:4:8-4:9
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/fuzz_block_pass.rb:4:8-4:8
        localVariable = <U <self>>
      }
      fun = <U a>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Break{ loc = test/testdata/desugar/fuzz_block_pass.rb:5:1-5:8, expr = Send{
        loc = test/testdata/desugar/fuzz_block_pass.rb:5:7-5:8
        flags = {privateOk}
        recv = Local{
          loc = test/testdata/desugar/fuzz_block_pass.rb:5:7-5:7
          localVariable = <U <self>>
        }
        fun = <U a>
        block = nullptr
        pos_args = 0
        args = [
        ]
      } }

    Return{ loc = test/testdata/desugar/fuzz_block_pass.rb:6:1-6:7, expr = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb } }

    UnresolvedConstantLit{
      loc = test/testdata/desugar/fuzz_block_pass.rb:6:7-6:7
      cnst = <C <U <ErrorNode>>>
      scope = EmptyTree{ loc = test/testdata/desugar/fuzz_block_pass.rb }
    }

    Send{
      loc = test/testdata/desugar/fuzz_block_pass.rb:6:9-6:10
      flags = {privateOk}
      recv = Local{
        loc = test/testdata/desugar/fuzz_block_pass.rb:6:9-6:9
        localVariable = <U <self>>
      }
      fun = <U a>
      block = nullptr
      pos_args = 0
      args = [
      ]
    }

    Return{ loc = test/testdata/desugar/fuzz_block_pass.rb:7:1-7:9, expr = Send{
        loc = test/testdata/desugar/fuzz_block_pass.rb:7:8-7:9
        flags = {privateOk}
        recv = Local{
          loc = test/testdata/desugar/fuzz_block_pass.rb:7:8-7:8
          localVariable = <U <self>>
        }
        fun = <U a>
        block = nullptr
        pos_args = 0
        args = [
        ]
      } }
  ]
}
